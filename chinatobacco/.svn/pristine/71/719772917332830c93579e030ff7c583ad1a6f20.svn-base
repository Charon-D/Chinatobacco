package com.chinatobacco.controller;

import java.util.List;

import javax.annotation.Resource;

import org.apache.ibatis.annotations.Param;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.chinatobacco.pojo.User;
import com.chinatobacco.service.UserService;

/**
 * @author Davi
 * @category 用户控制器
 */
@Controller
@RequestMapping("/user")
public class UserController {
	Logger log = Logger.getLogger(UserController.class);
	
	@Resource
	private UserService userService;
	
	// 进入首页
		@RequestMapping("/index")
		public String index() {
			System.out.println("index");
			return "forward:/index.html";
		}

	//用户登录
	@RequestMapping("/login")
	public String login(){
		System.out.println("login");
		return "userlogin";
	}
	
	//查询所有
	@RequestMapping("/showuser")
	public String showuser(Model model) {
		log.debug("showuser");
		List<User> list = userService.selectAll();
		//向模型对象中添加数据
		model.addAttribute("list", list);
		System.out.println(list.size());
		//返回视图页面
		return "showuser";
	}
	
	//添加员工add
	@RequestMapping("/add")
	public String add() {
			return "adduser";
	}
	
	//保存添加员工
	@RequestMapping("/addsave")
	public String addsave(User user){
		boolean flag = userService.add(user);
		if (flag) {
			return "redirect:showuser.do";
		}
		return "404";
	}
	
	
	
	//删除员工delete
	@RequestMapping("/delete")
	public String delete(int uid){
		boolean flag  = userService.delete(uid);
		if (flag) {
			return "showuser";
		}
		return "404";
	}
	
	//修改员工update
	@RequestMapping("/update")
	public String update(){
			return "updateuser";
	}
	//保存修改员工
	@RequestMapping("/updatesave")
	public String updatesave(User user){
		boolean flag = userService.update(user);
		if (flag) {
			return "redirect:showuser.do";
		}
		return "404";
	}
	
	//通过角色id查询员工
	@RequestMapping("/selectByuid")
	public String selectByRole(@RequestParam("uid") int uid,Model model) {
		log.debug("showuser");
		List<User> list = userService.selectByRole(uid);
		//向模型对象中添加数据
		model.addAttribute("list", list);
		System.out.println(list.size());
		//返回视图页面
		return "showuser";
	}
}
